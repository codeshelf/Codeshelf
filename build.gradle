apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'groovy'
task wrapper(type: Wrapper) { gradleVersion = '2.2.1' }

tasks.eclipse.dependsOn(cleanEclipse) // always clean project
eclipse {
	classpath {
		defaultOutputDir file('eclipse-bin')
	}
	jdt.file {
		// restore custom project settings
		def props = new Properties()
		props.load(new FileInputStream('.settings/org.eclipse.jdt.core.prefs.template'))
		withProperties { properties -> properties.putAll(props) }
	}
}

compileJava {
	sourceCompatibility = 1.7
	targetCompatibility = 1.7
}


task cleanLegacy {
	(new File('target')).deleteDir()
	(new File('APIs')).deleteDir()
	(new File('conf')).deleteDir()
	(new File('design-docs')).deleteDir()
	(new File('hooks')).deleteDir()
	(new File('installer')).deleteDir()
	(new File('liquibase')).deleteDir()
	(new File('lib/junit')).deleteDir()
	(new File('lib/retired')).deleteDir()
}
tasks.clean.dependsOn(cleanLegacy)

repositories {
	mavenCentral()
	maven { url "http://iron-io.github.io/maven/repository" }

    //    maven { url "https://clojars.org/repo" }

}

dependencies {
	runtime 'javax.inject:javax.inject:1',
			'org.hibernate:hibernate-ehcache:4.3.8.Final',
			'net.sf.ehcache:ehcache-core:2.6.9',
			'org.apache.logging.log4j:log4j-flume-ng:2.1',
			'org.apache.flume:flume-ng-embedded-agent:1.5.2',
			'org.apache.logging.log4j:log4j-slf4j-impl:2.1', // log4j2 implementation of slf4j
			'org.apache.logging.log4j:log4j-jcl:2.1', // log4j2 implementation of commons-logging
			'org.apache.logging.log4j:log4j-jul:2.1', // log4j2 implementation of java.util.logging
			'org.springframework:spring-beans:4.1.4.RELEASE' // this is only to suppress a liquibase startup warning


	compile		'org.apache.logging.log4j:log4j-api:2.1', // log4j2 api
			'org.apache.logging.log4j:log4j-1.2-api:2.1', // log4j2 implementation of log4j 1.2 api
			'commons-logging:commons-logging:1.2',	// commons-logging api
			'org.slf4j:slf4j-api:1.7.7',	// slf4j api
			'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.5.1',

            /*
            'org.clojure:clojure:1.6.0',
            'cider:cider-nrepl:0.9.0-SNAPSHOT',
            'org.clojure:tools.nrepl:0.2.10',
            */

            'org.codehaus.groovy:groovy-groovysh:2.4.3',
            'org.codehaus.groovy:groovy-jsr223:2.4.3',

            'com.google.inject:guice:3.0',
			'com.google.inject.extensions:guice-servlet:3.0',
			'com.google.guava:guava:18.0',

            'com.github.rholder:guava-retrying:2.0.0',
            'commons-beanutils:commons-beanutils:1.9.2',
			'commons-io:commons-io:2.4',
			'commons-codec:commons-codec:1.10',

			'org.eclipse.jetty.websocket:javax-websocket-server-impl:9.2.7.v20150116',
			'org.eclipse.jetty.websocket:javax-websocket-client-impl:9.2.7.v20150116',
			'org.eclipse.jetty:apache-jsp:9.2.7.v20150116',

			'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.4.4',
			'com.sun.jersey:jersey-servlet:1.18.1',
			'com.sun.jersey.contribs:jersey-guice:1.18.1',
			'com.sun.jersey.contribs:jersey-multipart:1.18.1',
			'org.secnod.shiro:shiro-jersey:0.1.0',

			'org.hibernate:hibernate-entitymanager:4.3.8.Final',
			'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final',
			'com.mchange:c3p0:0.9.5',
			'org.hibernate:hibernate-c3p0:4.3.8.Final',

			'com.h2database:h2:1.4.186',

			'org.postgresql:postgresql:9.3-1100-jdbc41',

			'io.iron.ironmq:ironmq:0.0.19',
			'com.google.code.gson:gson:2.2.4', //note this is here to satisfy ironmq 0.0.10 dependency. Upgrade ironmq soon

			'com.fasterxml.jackson.core:jackson-annotations:2.4.1',
			'org.liquibase.ext:liquibase-hibernate4:3.4',
			'org.liquibase:liquibase-core:3.2.2',

			'com.codahale.metrics:metrics-healthchecks:3.0.2',
			'com.codahale.metrics:metrics-jvm:3.0.2',
			'com.codahale.metrics:metrics-servlets:3.0.2',

			'com.github.sps.metrics:metrics-opentsdb:1.0.2',
			'net.jpountz.lz4:lz4:1.2.0',

			'com.opencsv:opencsv:3.5',
			'javax.validation:validation-api:1.1.0.Final',
            'joda-time:joda-time:2.3',
			'com.joestelmach:natty:0.11',
			'org.apache.shiro:shiro-guice:1.+',
			'com.dropbox.core:dropbox-core-sdk:1.7.6',

			'com.sun.mail:javax.mail:1.5.2',
			'commons-validator:commons-validator:1.4.1',
			'org.apache.velocity:velocity:1.7',
			
			'com.jcraft:jsch:0.1.53', // ssh/sftp client

			'com.eaio.uuid:uuid:3.2',
			'org.projectlombok:lombok:1.14.8',

			'org.apache.httpcomponents:httpclient:4.3.6',
			'org.apache.httpcomponents:httpmime:4.3.6',

			'org.apache.mina:mina-core:2.0.4',

			'org.mockito:mockito-core:1.9.5',

			'org.quartz-scheduler:quartz:2.2.1',

			// manually update
			files('lib/dist/classindex-3.3.jar'), // needs to be in fixed location for eclipse annotation processing
			files('lib/dist/JD2XX.jar') // our library for interacting with FTDI USB-Serial interface


	testCompile group: 'junit', name: 'junit', version: '4.+'
	testCompile 'com.natpryce:make-it-easy:3.1.0',
			'com.h2database:h2:1.3.172'
}

configurations.all {
	resolutionStrategy {
		//force 'junit:junit:4.12'
		//failOnVersionConflict()
		//enableNightmarishlyComplicatedManualDependencyResolutionHell()
	}

	// we have log4j 1.2->2.1 api and slf4j-log4j2, which drop in for these legacy APIs:
	exclude group: 'log4j', module: 'log4j'
	exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

compileJava {
	//enable compilation in a separate daemon process for no particular reason
	//options.fork = true

	//enable incremental compilation if you are feeling lucky and want to save 3 seconds
	//options.incremental = true
}

test {
	minHeapSize = "128m"
	maxHeapSize = "768m"

	//slow everything down in case you don't have time to get coffee
	//forkEvery = 1
}

task serverJar (type: Jar) {
	destinationDir = file('build/dist')
	baseName = 'server.codeshelf'
	from(sourceSets.main.output)

	manifest.attributes (
		'Main-Class': 'com.codeshelf.application.ServerMain',
		'Class-Path': configurations.runtime.files.collect {"lib/${it.name}"}.join(' ')
		)
}

task siteControllerJar (type: Jar) {
	destinationDir = file('build/dist')
	baseName = 'sitecontroller.codeshelf'
	from(sourceSets.main.output)

	manifest.attributes (
		'Main-Class': 'com.codeshelf.application.CsSiteControllerMain',
		'Class-Path': configurations.runtime.files.collect {"lib/${it.name}"}.join(' ')
		)
}

task copyRuntimeDeps(type: Copy) {
	into 'build/dist/lib'
	from configurations.runtime
}

task copyNativeLibraries(type: Copy) {
	into 'build/dist/lib/native'
	from 'lib/native/'
}

task dist {
	dependsOn serverJar, siteControllerJar, copyRuntimeDeps, copyNativeLibraries
}
