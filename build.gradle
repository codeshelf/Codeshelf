apply plugin: 'java'
apply plugin: 'eclipse'

tasks.eclipse.dependsOn(cleanEclipseClasspath)

eclipse {
	classpath {
		defaultOutputDir file('eclipse-bin')
	}
}

task wrapper(type: Wrapper) { gradleVersion = '2.2.1' }

repositories {
	mavenCentral()
	maven { url "http://iron-io.github.io/maven/repository" }
}

sourceSets {
	main {
		java { srcDir 'src' }
		resources { srcDir 'resources/main' }
	}
	test {
		java { srcDir 'test' }
		resources { srcDir 'resources/test' }
	}
}

dependencies {
	runtime 'javax.inject:javax.inject:1',
			'org.slf4j:jul-to-slf4j:1.6.4',
			'org.hibernate:hibernate-c3p0:4.3.7.Final',
			'org.hibernate:hibernate-ehcache:4.3.7.Final',
			'net.sf.ehcache:ehcache-core:2.6.9',
			'com.mchange:c3p0:0.9.5'
			
	compile	'org.slf4j:slf4j-log4j12:1.7.7',
			'com.google.inject:guice:3.0',
			'com.google.inject.extensions:guice-servlet:3.0',
			'com.google.guava:guava:16.0',
			'commons-io:commons-io:1.4',

			'org.eclipse.jetty.websocket:javax-websocket-server-impl:9.2.7.v20150116',
			'org.eclipse.jetty.websocket:javax-websocket-client-impl:9.2.7.v20150116',
			'org.eclipse.jetty:apache-jsp:9.2.7.v20150116',
			
			'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.4.4',
			'com.sun.jersey:jersey-servlet:1.18.1',
			'com.sun.jersey.contribs:jersey-guice:1.18.1',
			'com.sun.jersey.contribs:jersey-multipart:1.18.1',
			
			'org.hibernate:hibernate-core:4.3.7.Final',
			'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final',

			'org.postgresql:postgresql:9.3-1100-jdbc41',

			'ironmq:ironmq:0.0.10',
			'com.google.code.gson:gson:2.2.4', //note this is here to satisfy ironmq 0.0.10 dependency. Upgrade ironmq soon

			'com.fasterxml.jackson.core:jackson-annotations:2.4.1',
			'org.liquibase.ext:liquibase-hibernate4:3.4',
			'org.liquibase:liquibase-core:3.2.2',

			'com.codahale.metrics:metrics-healthchecks:3.0.2',
			'com.codahale.metrics:metrics-jvm:3.0.2',
			'com.codahale.metrics:metrics-servlets:3.0.2',

			'com.github.sps.metrics:metrics-opentsdb:1.0.2',
			'net.jpountz.lz4:lz4:1.2.0',


			'au.com.bytecode:opencsv:2.4',
			'javax.validation:validation-api:1.1.0.Final',
			'com.joestelmach:natty:0.8',
			'org.apache.shiro:shiro-guice:1.+',
			'com.dropbox.core:dropbox-core-sdk:1.7.6',
			
			'com.eaio.uuid:uuid:3.2',
			'org.projectlombok:lombok:1.14.8',
			
			'org.apache.httpcomponents:httpclient:4.3.6',
			'org.apache.httpcomponents:httpmime:4.3.6',
			
			// manually update
			files('lib/dist/classindex-3.3.jar'), // needs to be in fixed location for eclipse annotation processing
			files('lib/dist/JD2XX.jar') // our library for interacting with FTDI USB-Serial interface


	testCompile group: 'junit', name: 'junit', version: '4.+'
	testCompile 'org.mockito:mockito-core:1.9.5',
			'com.natpryce:make-it-easy:3.1.0',
			'com.h2database:h2:1.3.172'
}

configurations.all {
	resolutionStrategy {
//		force 'junit:junit:4.12'
//		failOnVersionConflict()
//		enableNightmarishlyComplicatedManualDependencyResolutionHell()
	}
}

compileJava {
	//enable compilation in a separate daemon process for no particular reason
	//options.fork = true

	//enable incremental compilation if you are feeling lucky and want to save 3 seconds
	//options.incremental = true
}

test {
	minHeapSize = "128m"
	maxHeapSize = "768m"

	//slow everything down in case you don't have time to get coffee
	//forkEvery = 1
}

task serverJar (type: Jar) {
	destinationDir = file('build/dist')
	baseName = 'server.codeshelf'
	from(sourceSets.main.output)

	manifest {
		attributes (
			'Main-Class': 'com.gadgetworks.codeshelf.application.ServerMain',
			'Class-Path': configurations.runtime.files.collect {"lib/${it.name}"}.join(' ')
		)
	}
}

task siteControllerJar (type: Jar) {
	destinationDir = file('build/dist')
	baseName = 'sitecontroller.codeshelf'
	from(sourceSets.main.output)
	manifest {
		attributes (
			'Main-Class': 'com.gadgetworks.codeshelf.application.CsSiteControllerMain',
			'Class-Path': configurations.runtime.files.collect {"lib/${it.name}"}.join(' ')
		)
		
	}
}

task copyRuntimeDeps(type: Copy) {
	into 'build/dist/lib'
	from configurations.runtime
}

task copyNativeLibraries(type: Copy) {
	into 'build/dist/lib/native'
	from 'lib/native/'
}

task dist {
	dependsOn serverJar, siteControllerJar, copyRuntimeDeps, copyNativeLibraries
}
