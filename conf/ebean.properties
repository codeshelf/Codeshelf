
## -------------------------------------------------------------
## Reload java.util.logging properties file
## -------------------------------------------------------------
#logging.properties.file=conf/logging.properties


## -------------------------------------------------------------
## Load (Dev/Test/Prod) server specific properties
## -------------------------------------------------------------
## This is a possible alternative to using JNDI to set environment
## properties externally (to the WAR file).  This is another way 
## your Dev, Test and Prod servers can have different properties.

ebean.autofetch.querytuning=true
ebean.autofetch.profiling=true
ebean.autofetch.implicitmode=default_on
ebean.autofetch.profiling.min=1
ebean.autofetch.profiling.base=10
ebean.autofetch.profiling.rate=0.05


## -------------------------------------------------------------
## Transaction Logging
## -------------------------------------------------------------
ebean.debug.sql=true
ebean.debug.lazyload=true

## Log transaction begins and ends etc
## (0=NoLogging 1=minimal ... 9=logAll)
ebean.debug.transaction=2

## location of transaction logs
ebean.log.directory=${app.data.dir}/logs
ebean.resource.file.directory=${app.data.dir}
ebean.useJuliTransactionLogger=true

## General logging level: (NONE, SQL, ALL)
ebean.log.level=ALL

## Sharing log files: (0=None Share, 1=Implicit Share, 2=All Share)
ebean.log.share=0

## Specific Log levels
## 0=none  1=summary  2=bindings  3=sql
ebean.log.iud=1
ebean.log.findid=1
ebean.log.findmany=1

## -------------------------------------------------------------
## Transaction settings.
## ------------------------------------------------------------- 
transaction.onqueryonly=CLOSE
##ebean.transaction.rollbackOnChecked=false

## -------------------------------------------------------------
## Data Types
## -------------------------------------------------------------

#ebean.type.boolean.false=F
#ebean.type.boolean.true=T
## use varchar or integer (defaults to varchar)
#ebean.type.boolean.dbtype=varchar
#ebean.columnAliasPrefix=as column_


## -------------------------------------------------------------
## Batch Mode 
## -------------------------------------------------------------

#ebean.batch.mode=false
#ebean.batch.getgeneratedkeys=true
#ebean.batch.size=20


## -------------------------------------------------------------
## DataSource Factory (JNDI, Default or custom)
## ------------------------------------------------------------- 

## Default (Ebean DataSourceFactory)
ebean.datasource.factory=default

## JNDI
#ebean.datasource.factory=jndi

## Custom DataSourceFactory
#ebean.datasource.factory=yourpackage.YourDataSourceFactory

## -------------------------------------------------------------
## DataSources (If using default Ebean DataSourceFactory)
## ------------------------------------------------------------- 

datasource.default=h2

datasource.h2.username=codeshelf
datasource.h2.password=codeshelf
datasource.h2.databaseUrl=${app.database.url};SCHEMA=CODESHELF;TRACE_LEVEL_FILE=0;AUTO_SERVER=TRUE
datasource.h2.databaseDriver=org.h2.Driver
datasource.h2.minConnections=1
datasource.h2.maxConnections=25
datasource.h2.isolationlevel=read_committed
#datasource.h2.heartbeatsql=select count(*) from dual
ebean.h2platform.useIdentity=true

datasource.heartbeatfreq=60


## -------------------------------------------------------------
## Search JARs and packages for enhanced classes
## -------------------------------------------------------------
ebean.search.packages=com.gadgetworks.codeshelf.model.persist
ebean.search.jars=codeshelf.jar
