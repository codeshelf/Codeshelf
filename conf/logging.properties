############################################################
#  	Logging Configuration File
############################################################
##
## A java.util.logging properties file, that can be used if
## you want a little more than the default JDK handlers. 
##
## Maybe useful for some (with standalone apps).
##
## If you are running in a server (like tomcat) you would likely
## use the servers own built in handlers (and not this).
##
############################################################

handlers=org.slf4j.bridge.SLF4JBridgeHandler
#handlers=com.avaje.lib.log.ConsoleHandler, com.avaje.lib.log.FileHandler
#handlers=com.avaje.lib.log.FileHandler

.level=ALL

#com.avaje.handler=com.avaje.lib.log.ConsoleHandler

com.avaje.lib.log.FileHandler.pattern=${app.data.dir}/logs/codeshelf.jul.log
#com.avaje.lib.log.ConsoleHandler.pattern=logs/app_%d.log

# Limit the message that are printed on the console to INFO and above.
#com.avaje.lib.log.ConsoleHandler.level=INFO
#com.avaje.lib.log.ConsoleHandler.mode=both
#com.avaje.lib.log.ConsoleHandler.formatter = com.avaje.lib.log.SimpleFormatter

#com.avaje.lib.log.DefaultConsoleFormatter.format=millis
#com.avaje.lib.log.DefaultFileFormatter.format=none

##
## example patterns for log files
## 
#com.avaje.lib.log.AuxFileHandler.pattern=${CATALINA_HOME}/logs/avaje%d.log
#com.avaje.lib.log.AuxFileHandler.pattern=%t/in_temp_dir.log
#com.avaje.lib.log.AuxFileHandler.pattern=%h/in_userhome.log
#com.avaje.lib.log.AuxFileHandler.pattern=other%d.log
#com.avaje.handlers=com.avaje.lib.log.AuxFileHandler
#com.avaje.useParentHandlers=false

